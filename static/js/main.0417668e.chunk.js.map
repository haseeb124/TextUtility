{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Myfunc","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","style","height","width","cursor","htmlFor","Mytext","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","i","charAt","slice","b","join","filter","element","Alert","alert","role","word","lower","toLowerCase","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","cls","body","classList","remove","add","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0417668e.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Myfunc(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      <div className=\"d-flex\">\r\n\r\n          <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height: '30px', width: '30px',cursor:'pointer'}}></div>\r\n          <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height: '30px', width: '30px',cursor:'pointer'}}></div>\r\n          <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height: '30px', width: '30px',cursor:'pointer'}}></div>\r\n          <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height: '30px', width: '30px',cursor:'pointer'}}></div>\r\n      </div>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={()=>{props.toggleMode(null)}}  id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n\r\n\r\n// Navbar.propTypes = {\r\n//     title : PropTypes.string.isRequired,\r\n//     aboutText : PropTypes.string.isRequired\r\n// }","import React, {useState} from 'react'\r\n\r\n\r\nexport default function Mytext(props) {\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    \r\n    const handleUpclick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n\r\n    const handleloclick = () =>{\r\n        let newText = text.toLocaleLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n\r\n    const handlecleartext = () =>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n\r\n    const handlecopytext = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied\", \"success\");\r\n        \r\n\r\n    }\r\n\r\n    const handleCapitext = () =>{\r\n        let a = text.split(\" \");\r\n        for (var i =0; i<a.length; i++){\r\n         a[i] = a[i].charAt(0).toUpperCase() + a[i].slice(1);\r\n        }\r\n        let b = a.join(\" \");\r\n        setText(b)\r\n         \r\n     }\r\n    \r\n    const handleOnchange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <>\r\n\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode==='dark'?'#2378eb':'white',color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleUpclick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleloclick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handlecleartext}>Clear Text</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handlecopytext}>Copy Text</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleCapitext}>Capitalize First Letter</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} Characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter above in textbox to preview here\"}</p>\r\n        \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const capitalize = (word)=>{\r\n      const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n          <div style={{height : '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n        \r\n  \r\n\r\n  )\r\n}\r\n\r\nexport default Alert","import Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, {useState} from 'react'\nimport Alert from \"./components/Alert\";\n// import ReactDOM from \"react-dom/client\";\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState('')\n\n  const showAlert = (message, type) =>{\n        setAlert({\n          msg: message,\n          type: type \n        })\n        setTimeout(() => {\n          setAlert('')\n        }, 1500);\n  }\n\n  const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n  }\n\n  const toggleMode = (cls)=>{\n    removeBodyClasses();\n    document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey'\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  \n  return (\n    <>\n       \n    {/* <BrowserRouter> */}\n      \n       <Navbar title=\"TextUt\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n       <Alert alert={alert} />\n       <div className=\"container my-3\">\n          {/* <Routes> */}\n\n          {/* <Route exact path=\"/about\" element={<About />} /> */}\n          {/* <Route exact path=\"/\" element={<TextForm  heading =\"Enter Text here to analyze\" mode={mode} showAlert={showAlert} />} /> */}\n      \n          {/* </Routes> */}\n          <TextForm  heading =\"Try TextUtils - Word Counter, Character Counter and Capitalize Text\" mode={mode} showAlert={showAlert} />\n       </div>\n    \n      \n    {/* </BrowserRouter> */}\n        \n      \n       \n        {/* <About /> */}\n      </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}